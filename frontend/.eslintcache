[{"C:\\WebDev\\Upcancer\\frontend\\src\\index.js":"1","C:\\WebDev\\Upcancer\\frontend\\src\\reportWebVitals.js":"2","C:\\WebDev\\Upcancer\\frontend\\src\\App.js":"3","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\index.js":"4","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\index.js":"5","C:\\WebDev\\Upcancer\\frontend\\src\\functions\\index.js":"6","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\About\\index.js":"7","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Navbar\\index.js":"8","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\TopNavbar\\index.js":"9","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Services\\index.js":"10","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\SideNavbar\\index.js":"11","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Home\\index.js":"12","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\index.js":"13","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\Dashboard\\index.js":"14","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\Report\\index.js":"15","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\Chat\\index.js":"16","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\Calendar\\index.js":"17","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\Contact.js":"18","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\AddContact.js":"19","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\ContactDetail.js":"20","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\SearchContacts.js":"21","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Signin\\index.js":"22","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Register\\index.js":"23"},{"size":311,"mtime":1613455800713,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1612828993521,"results":"26","hashOfConfig":"25"},{"size":2604,"mtime":1614915111552,"results":"27","hashOfConfig":"25"},{"size":899,"mtime":1614915111555,"results":"28","hashOfConfig":"25"},{"size":1365,"mtime":1612828993521,"results":"29","hashOfConfig":"25"},{"size":432,"mtime":1613455800711,"results":"30","hashOfConfig":"25"},{"size":161,"mtime":1612828993512,"results":"31","hashOfConfig":"25"},{"size":1072,"mtime":1612828993514,"results":"32","hashOfConfig":"25"},{"size":4253,"mtime":1612828993520,"results":"33","hashOfConfig":"25"},{"size":167,"mtime":1612828993515,"results":"34","hashOfConfig":"25"},{"size":1419,"mtime":1612828993519,"results":"35","hashOfConfig":"25"},{"size":83,"mtime":1612828993514,"results":"36","hashOfConfig":"25"},{"size":6554,"mtime":1614839488960,"results":"37","hashOfConfig":"25"},{"size":127,"mtime":1612828993518,"results":"38","hashOfConfig":"25"},{"size":118,"mtime":1612828993518,"results":"39","hashOfConfig":"25"},{"size":112,"mtime":1612828993517,"results":"40","hashOfConfig":"25"},{"size":1047,"mtime":1614915111557,"results":"41","hashOfConfig":"25"},{"size":2247,"mtime":1614305583451,"results":"42","hashOfConfig":"25"},{"size":2912,"mtime":1614839355938,"results":"43","hashOfConfig":"25"},{"size":2169,"mtime":1614834145914,"results":"44","hashOfConfig":"25"},{"size":315,"mtime":1614840021868,"results":"45","hashOfConfig":"25"},{"size":899,"mtime":1614915111554,"results":"46","hashOfConfig":"25"},{"size":1593,"mtime":1614915111553,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"tbs7vo",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":10,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\WebDev\\Upcancer\\frontend\\src\\index.js",[],["100","101"],"C:\\WebDev\\Upcancer\\frontend\\src\\reportWebVitals.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\App.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\functions\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\About\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Navbar\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\TopNavbar\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Services\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\SideNavbar\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Home\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\index.js",["102","103","104"],"import React, { useState, useEffect } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\r\nimport { Transition } from 'react-transition-group';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './contact.css'\r\nimport Contact from './Contact'\r\nimport AddContact from './AddContact'\r\nimport ContactDetail from './ContactDetail'\r\nimport SearchContacts from './SearchContacts';\r\n\r\nexport const ContactPage = () => {\r\n    const [contacts, setContacts] = useState([]);\r\n    const [showDetails, setShowDetails] = useState(false);\r\n    const [detail, setDetail] = useState({});\r\n    const [detailComponent, setDetailComponent] = useState(null);\r\n\r\n    // additional contact fields\r\n    // title at company\r\n    // address\r\n    // website\r\n    // notes\r\n    const contactsPlaceholder = [\r\n        {\r\n            name: \"Name\",\r\n            phoneNum: \"(123) 456-7890\",\r\n            email: \"placeholder00@gmail.com\",\r\n            company: \"Sample Inc\",\r\n            title: \"General Manager\",\r\n            address: \"134 Hartford Dr\\nLos Angeles, CA 91241\",\r\n            notes: \"\",\r\n        },\r\n        {\r\n            name: \"Gary Marsh\",\r\n            phoneNum: \"(435) 723-1879\",\r\n            email: \"gmarsh00@gmail.com\",\r\n            company: \"Sample Inc 2\",\r\n            title: \"Marketing Coordinator\",\r\n            address: \"134 Hartford Dr\\nLos Angeles, CA 91241\",\r\n            notes: \"This person is in charge of advertising campaigns.rsianuyydrclei;a;mewp;iiisiiiiiiiiiiiiiiisisisisisisisisisisisisisisiirya;woirnhewao;ircnyha;orihneawoir hcoa;ewirhpo; wainhfkadewfh dspirh  dewighloifbedfifbdiprthw\",\r\n        },\r\n        {\r\n            name: \"Carmen Perkins\",\r\n            phoneNum: \"(541) 260-8153\",\r\n            email: \"cperkins00@gmail.com\",\r\n            company: \"Sample Inc 3\",\r\n            title: \"Project Manager\",\r\n            address: \"134 Hartford Dr\\nLos Angeles, CA 91241\",\r\n            notes: \"\",\r\n        },\r\n        {\r\n            name: \"April Jennings\",\r\n            phoneNum: \"(440) 073-1213\",\r\n            email: \"ajennings@gmail.com\",\r\n            company: \"Sample Inc\",\r\n            title: \"Web Designer\",\r\n            address: \"134 Hartford Dr\\nLos Angeles, CA 91241\",\r\n            notes: \"\",\r\n        },\r\n        {\r\n            name: \"Ivan Abdullah\",\r\n            phoneNum: \"(123) 456-7890\",\r\n            email: \"iabdullah0@gmail.com\",\r\n            company: \"Sample Inc\",\r\n            title: \"Human Resources Representative\",\r\n            address: \"134 Hartford Dr\\nLos Angeles, CA 91241\",\r\n            notes: \"\",\r\n        },\r\n        {\r\n            name: \"Name\",\r\n            phoneNum: \"(123) 456-7890\",\r\n            email: \"placeholder00@gmail.com\",\r\n            company: \"Sample Inc\",\r\n            title: \"Accountant\",\r\n            address: \"134 Hartford Dr\\nLos Angeles, CA 91241\",\r\n            notes: \"\",\r\n        },\r\n        {\r\n            name: \"Name\",\r\n            phoneNum: \"(123) 456-7890\",\r\n            email: \"placeholder00@gmail.com\",\r\n            company: \"Sample Inc\",\r\n            title: \"General Manager\",\r\n            address: \"134 Hartford Dr\\nLos Angeles, CA 91241\",\r\n            notes: \"\",\r\n        },\r\n    ]\r\n\r\n    useEffect(() => {\r\n        // TODO: call to backend to get all contacts\r\n        setContacts(contactsPlaceholder)\r\n    }, []);\r\n\r\n\r\n\r\n\r\n    const toggleDetails = (selectedContact) => {\r\n        if (!showDetails) { // if not currently showing detail\r\n            // since setState is async, update component in useEffect instead of here\r\n            setDetail(selectedContact)\r\n        }\r\n        setShowDetails(!showDetails)\r\n    }\r\n    useEffect(() => {\r\n        // only create component AFTER setDetail is finished (which calls this useEffect)\r\n        // otherwise detail will be null when passing it as a prop\r\n        setDetailComponent(<ContactDetail selected={detail} onBackClick={toggleDetails} />)\r\n\r\n    }, [detail])\r\n\r\n    const contactComponents = contacts.map((c) => {\r\n        return (\r\n            <Grid item sm={4}>\r\n                <Contact contact={c} onClickEvent={toggleDetails} showDetails={showDetails} show />\r\n            </Grid>)\r\n    })\r\n\r\n    const duration = 500;\r\n\r\n    const defaultStyle = {\r\n        transition: `all ${duration}ms ease-in-out`,\r\n        opacity: 0,\r\n        width: \"0%\",\r\n        height: \"100%\",\r\n        zIndex: 1\r\n    }\r\n\r\n    const transitionStyles = {\r\n        entering: { width: \"100%\", opacity: 1 },\r\n        entered: { width: \"100%\", opacity: 1 },\r\n        exiting: { width: \"0%\", opacity: 0 },\r\n        exited: { width: \"0%\", opacity: 0 },\r\n    };\r\n\r\n    return (\r\n        <div className=\"contact-page\">\r\n\r\n            <Container fluid style={{ width: \"100%\", height: \"100%\", marginLeft: 10, padding: 0 }} >\r\n                <Row style={{ width: \"100%\", height: \"100%\", marginLeft: \"10px\" }}>\r\n\r\n                    <Col md={8} className=\"px-0\">\r\n                        <Row className=\"top-row\">\r\n                            <h1 className=\"contact-title\">Contacts</h1>\r\n                            <SearchContacts />\r\n                        </Row>\r\n                        <div className=\"contact-grid\" >\r\n                            <Grid container justify=\"left\" className=\"material-grid\" spacing={1} >{contactComponents}</Grid>\r\n                        </div>\r\n                    </Col>\r\n                    <Col md={4} className=\"px-0\">\r\n\r\n                        {/*\r\n                    showDetails ? \r\n                    <Collapse in={showDetails} style={{height: \"100%\"}}>\r\n                        <div id=\"detail-collapse\">\r\n                            {detailComponent}\r\n                        </div>\r\n                    </Collapse> : <AddContact />\r\n                    */}\r\n                        {/*\r\n                    {showDetails ? detailComponent  : \r\n                    <AddContact /> }\r\n                    */}\r\n\r\n                        <AddContact />\r\n                        <Transition in={showDetails} timeout={duration}>\r\n                            {state => (\r\n                                <div style={{\r\n                                    ...defaultStyle,\r\n                                    ...transitionStyles[state]\r\n                                }}>\r\n                                    {detailComponent}\r\n                                </div>\r\n                            )}\r\n                        </Transition>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\Dashboard\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\Report\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\Chat\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\SignedIn\\Calendar\\index.js",["105","106","107","108","109","110","111","112","113","114","115"],"import './calendar.css'\r\nimport { Inject, ScheduleComponent, Day, Week, WorkWeek, Month, Agenda } from \"@syncfusion/ej2-react-schedule\";\r\nimport { render } from '@testing-library/react';\r\nimport * as React from 'react';\r\n\r\nexport const CalendarPage=()=>{\r\n    {/* Backend-- The Events are located here. */}\r\n    var data =[{\r\n                Id: 1,\r\n                Subject: 'test',\r\n                StartTime: new Date(year=2021,month=3,date=15,hours=10,mintues=0),\r\n                EndTime: new Date(year=2021,month=3,date=15,hours=12,mintues=30),\r\n            }];\r\n\r\n    \r\n        \r\n        render(); \r\n            return <div class=\"main\">\r\n                <link href=\"https://cdn.syncfusion.com/ej2/material.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n                <ScheduleComponent currentView='Month' height='700' width='1000' eventSettings={{ dataSource: data[0] }}>\r\n                <Inject services={[Day, Week, WorkWeek, Month, Agenda]} />\r\n                 </ScheduleComponent>\r\n                 <br />\r\n            </div>\r\n    \r\n}\r\n","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\Contact.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\AddContact.js",["116","117"],"import { Form, Button, Row, Col } from 'react-bootstrap';\r\n\r\n\r\nconst AddContact = (props) => {\r\n    const handleChange = () => {\r\n\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"add-contact\">\r\n            <h5 className=\"text-center\">Add a New Contact</h5>\r\n            <Form >\r\n                <Form.Group controlId=\"form-name\">\r\n                    <Form.Label size=\"sm\" sm={2}>Name</Form.Label>\r\n\r\n                    <Form.Control size=\"sm\" placeholder=\"Contact Name\" defaultValue=\"Contact Name\" required></Form.Control>\r\n\r\n                </Form.Group>\r\n                <Form.Group controlId=\"form-phone\">\r\n                    <Form.Label className=\"form-label\">Phone Number</Form.Label>\r\n                    <Form.Control type=\"tel\" size=\"sm\" placeholder=\"(XXX)XXX-XXXX\" required></Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId=\"form-email\">\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control type=\"email\" size=\"sm\" placeholder=\"Email Address\" required></Form.Control>\r\n                </Form.Group>\r\n            \r\n                <Form.Group controlId=\"form-address\">\r\n                    <Form.Label>Address Line 1</Form.Label>\r\n                    <Form.Control type=\"text\" size=\"sm\" placeholder=\"Address\"></Form.Control>\r\n                </Form.Group>\r\n\r\n                    <Form.Row>\r\n                        <Form.Group as={Col} controlId=\"formGridCity\">\r\n                            <Form.Label>City</Form.Label>\r\n                            <Form.Control size=\"sm\" placeholder=\"City\" />\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridState\">\r\n                            <Form.Label>State</Form.Label>\r\n                            <Form.Control as=\"select\" size=\"sm\" defaultValue=\"Choose...\">\r\n                                <option>Choose...</option>\r\n                                <option>...</option>\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group as={Col} controlId=\"formGridZip\">\r\n                            <Form.Label>Zip</Form.Label>\r\n                            <Form.Control size=\"sm\" placeholder=\"#####\" />\r\n                        </Form.Group>\r\n                    </Form.Row>\r\n                \r\n\r\n                <Form.Group controlId=\"form-notes\">\r\n                    <Form.Label>Additional Notes</Form.Label>\r\n                    <Form.Control size=\"sm\" as=\"textarea\" placeholder=\"Enter contact notes here...\" />\r\n                </Form.Group>\r\n\r\n                <Form.Group className=\"text-right\" style={{ paddingTop: \"10px\" }}>\r\n                    <Button variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AddContact;","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\ContactDetail.js",["118","119","120"],"import React, { useState, useEffect } from 'react';\r\nimport { ListGroup, Row, Button, Image } from 'react-bootstrap';\r\nimport { XCircle,Telephone, Envelope, Briefcase, House, JournalText } from 'react-bootstrap-icons';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './contact.css';\r\n\r\nconst ContactDetail = (props) => {\r\n    return (\r\n        <div className=\"detail-card\">\r\n            <button variant=\"secondary\" onClick={props.onBackClick} className=\"back-btn\">\r\n                <XCircle width=\"25\" height=\"25\" />\r\n            </button>\r\n            <Row className=\"detail-picture\">\r\n                <Image src=\"https://afmnoco.com/wp-content/uploads/2019/07/74046195_s.jpg\" className=\"contact-picture\" roundedCircle />\r\n            </Row>\r\n            <Row className=\"detail-title\">\r\n                <h4>{props.selected.name}</h4>\r\n            </Row>\r\n            \r\n            <ListGroup background=\"info\">\r\n                <ListGroup.Item >\r\n                    <Briefcase/> \r\n                    {\" \"}<strong>{props.selected.title}</strong> at <strong>{props.selected.company}</strong>\r\n                    </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Telephone />\r\n                    {\" \"}{props.selected.phoneNum}\r\n                    </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <Envelope />\r\n                    {\" \"}{props.selected.email}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                    <House />\r\n                    {\" \"}<strong>Address</strong>\r\n                    {props.selected.address == null ? null : props.selected.address.toString().split('\\n').map(s => <div>{s}<br/></div>)}\r\n                </ListGroup.Item>\r\n                <ListGroup.Item style={{minHeight: \"100px\", maxWidth: \"100%\", wordWrap: \"break-word\"}}>\r\n                    <div>\r\n                        <JournalText />\r\n                        {\" \"}<strong>Notes</strong><br/>\r\n                    </div>\r\n                    {props.selected.notes}\r\n                </ListGroup.Item>\r\n            </ListGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ContactDetail;\r\n","C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Contact\\SearchContacts.js",[],["121","122"],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Signin\\index.js",[],"C:\\WebDev\\Upcancer\\frontend\\src\\pages\\NotSignedIn\\Register\\index.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":3,"column":31,"nodeType":"129","messageId":"130","endLine":3,"endColumn":36},{"ruleId":"131","severity":1,"message":"132","line":93,"column":8,"nodeType":"133","endLine":93,"endColumn":10,"suggestions":"134"},{"ruleId":"131","severity":1,"message":"135","line":110,"column":8,"nodeType":"133","endLine":110,"endColumn":16,"suggestions":"136"},{"ruleId":"137","severity":1,"message":"138","line":7,"column":5,"nodeType":"139","messageId":"140","endLine":7,"endColumn":51},{"ruleId":"141","severity":2,"message":"142","line":11,"column":37,"nodeType":"129","messageId":"143","endLine":11,"endColumn":41},{"ruleId":"141","severity":2,"message":"144","line":11,"column":47,"nodeType":"129","messageId":"143","endLine":11,"endColumn":52},{"ruleId":"141","severity":2,"message":"145","line":11,"column":55,"nodeType":"129","messageId":"143","endLine":11,"endColumn":59},{"ruleId":"141","severity":2,"message":"146","line":11,"column":63,"nodeType":"129","messageId":"143","endLine":11,"endColumn":68},{"ruleId":"141","severity":2,"message":"147","line":11,"column":72,"nodeType":"129","messageId":"143","endLine":11,"endColumn":79},{"ruleId":"141","severity":2,"message":"142","line":12,"column":35,"nodeType":"129","messageId":"143","endLine":12,"endColumn":39},{"ruleId":"141","severity":2,"message":"144","line":12,"column":45,"nodeType":"129","messageId":"143","endLine":12,"endColumn":50},{"ruleId":"141","severity":2,"message":"145","line":12,"column":53,"nodeType":"129","messageId":"143","endLine":12,"endColumn":57},{"ruleId":"141","severity":2,"message":"146","line":12,"column":61,"nodeType":"129","messageId":"143","endLine":12,"endColumn":66},{"ruleId":"141","severity":2,"message":"147","line":12,"column":70,"nodeType":"129","messageId":"143","endLine":12,"endColumn":77},{"ruleId":"127","severity":1,"message":"148","line":1,"column":24,"nodeType":"129","messageId":"130","endLine":1,"endColumn":27},{"ruleId":"127","severity":1,"message":"149","line":5,"column":11,"nodeType":"129","messageId":"130","endLine":5,"endColumn":23},{"ruleId":"127","severity":1,"message":"150","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},{"ruleId":"127","severity":1,"message":"151","line":1,"column":27,"nodeType":"129","messageId":"130","endLine":1,"endColumn":36},{"ruleId":"127","severity":1,"message":"152","line":2,"column":26,"nodeType":"129","messageId":"130","endLine":2,"endColumn":32},{"ruleId":"123","replacedBy":"153"},{"ruleId":"125","replacedBy":"154"},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'Alert' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'contactsPlaceholder'. Either include it or remove the dependency array.","ArrayExpression",["157"],"React Hook useEffect has a missing dependency: 'toggleDetails'. Either include it or remove the dependency array.",["158"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-undef","'year' is not defined.","undef","'month' is not defined.","'date' is not defined.","'hours' is not defined.","'mintues' is not defined.","'Row' is defined but never used.","'handleChange' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Button' is defined but never used.",["155"],["156"],"no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [contactsPlaceholder]",{"range":"163","text":"164"},"Update the dependencies array to be: [detail, toggleDetails]",{"range":"165","text":"166"},[3351,3353],"[contactsPlaceholder]",[3946,3954],"[detail, toggleDetails]"]